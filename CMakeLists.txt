cmake_minimum_required (VERSION 3.0)

project (Betfair-Worker)

option(USE_STANDALONE_ASIO "set ON to use standalone Asio instead of Boost.Asio" OFF)
option(BUILD_TESTING "set ON to build library tests" OFF)
option(USE_OPENSSL "set OFF to build without OpenSSL" ON)

if(NOT MSVC)
    add_compile_options(-std=c++11 -Wall -Wextra)
    if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
        add_compile_options(-Wthread-safety)
    endif()
else()
    add_compile_options(/W1)
endif()

add_library(simple-web-server INTERFACE)

target_include_directories(simple-web-server INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})

find_package(Threads REQUIRED)
target_link_libraries(simple-web-server INTERFACE ${CMAKE_THREAD_LIBS_INIT})

if(USE_STANDALONE_ASIO)
    target_compile_definitions(simple-web-server INTERFACE USE_STANDALONE_ASIO)
    find_path(ASIO_PATH asio.hpp)
    if(NOT ASIO_PATH)
        message(FATAL_ERROR "Standalone Asio not found")
    else()
        target_include_directories(simple-web-server INTERFACE ${ASIO_PATH})
    endif()
else()
    find_package(Boost 1.53.0 COMPONENTS system thread REQUIRED)
    target_link_libraries(simple-web-server INTERFACE ${Boost_LIBRARIES})
    target_include_directories(simple-web-server INTERFACE ${Boost_INCLUDE_DIR})
    if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.9)
        target_compile_definitions(simple-web-server INTERFACE USE_BOOST_REGEX)
        find_package(Boost 1.53.0 COMPONENTS regex REQUIRED)
        target_link_libraries(simple-web-server INTERFACE ${Boost_LIBRARIES})
        target_include_directories(simple-web-server INTERFACE ${Boost_INCLUDE_DIR})
    endif()
endif()
if(WIN32)
    target_link_libraries(simple-web-server INTERFACE ws2_32 wsock32)
endif()

if(APPLE)
    set(OPENSSL_ROOT_DIR "/usr/local/opt/openssl")
endif()
if(USE_OPENSSL)
    find_package(OpenSSL)
endif()
if(OPENSSL_FOUND)
    target_compile_definitions(simple-web-server INTERFACE HAVE_OPENSSL)
    target_link_libraries(simple-web-server INTERFACE ${OPENSSL_LIBRARIES})
    target_include_directories(simple-web-server INTERFACE ${OPENSSL_INCLUDE_DIR})
endif()

if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMAKE_CURRENT_SOURCE_DIR}")
    find_package(Boost 1.53.0 COMPONENTS system thread filesystem)
    if(Boost_FOUND)
        if(OPENSSL_FOUND)
            add_executable(betfair_examples betfair_examples.cpp betfair_data/BetfairMarket.cpp betfair_data/BetfairMarket.h betfair_data/BetfairEventType.cpp betfair_data/BetfairEventType.h betfair_data/BetfairRace.cpp betfair_data/BetfairRace.h betfair_data/BetfairGroup.cpp betfair_data/BetfairGroup.h betfair_data/BetfairEvent.cpp betfair_data/BetfairEvent.h NavigationLoader.cpp NavigationLoader.h BetfairData.cpp BetfairData.h betfair_data/BetfairObject.cpp betfair_data/BetfairObject.h)
            target_link_libraries(betfair_examples simple-web-server)
            target_link_libraries(betfair_examples ${Boost_LIBRARIES})
            target_include_directories(betfair_examples PRIVATE ${Boost_INCLUDE_DIR})
        endif()
     endif()
    set(BUILD_TESTING ON)

    install(FILES 3rd-party/SimpleWeb/asio_compatibility.hpp 3rd-party/SimpleWeb/server_http.hpp 3rd-party/SimpleWeb/client_http.hpp 3rd-party/SimpleWeb/server_https.hpp 3rd-party/SimpleWeb/client_https.hpp 3rd-party/SimpleWeb/crypto.hpp 3rd-party/SimpleWeb/utility.hpp 3rd-party/SimpleWeb/status_code.hpp 3rd-party/SimpleWeb/mutex.hpp DESTINATION include/simple-web-server)
endif()

if(BUILD_TESTING)
    enable_testing()
    add_subdirectory(3rd-party/SimpleWeb/tests)
endif()
